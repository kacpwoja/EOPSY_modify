#!/bin/sh 
# script modify for EOPSY laboratory 1
# author: Kacper Wojakowski 293064

name=`basename $0`

# function for printing out errors
print_error()
{
	echo "$name: error: $1" 1>&2
}

# test if there is an option already
test_sedp()
{
	if [ $1 != "n" ]
	then
	print_error "only one option from -l, -u, <sed pattern> is allowed at a time"; exit 1;
	fi
}

# recursive function
recursive()
{
	for el in "$1"/*
	do
		if [ -d "$el" ]
		then
			mv "$el" "`echo $el | sed $2`"
			recursive "`echo $el | sed $2`" "$2"
		else
			mv "$el" "`echo $el | sed $2`"
		fi
	done
}

# when no arguments
if [ -z "$1" ] || [ "$1" = "-h" ]
then
cat<<EOT 1>&2

$name is a script which modifies filenames, lowercasing/uppercasing them, or calling the given sed pattern

usage:
  $name [-h]
  $name [-r] [-l|-u] <dir/file names...>
  $name [-r] <sed pattern> <dir/file names...>

options:
  -h             shows help
  -r             turns on recursion
  -l|-u          chooses between lowercase and uppercase
  <sed pattern>  sed patter with which to modify the names instead of lower/uppercasing
  
  if neither -l or -u is chosen, the first non-option argument is taken as the sed pattern

$name correct syntax examples:
  $name -l file1 file2
  $name -r -u directory
  $name ...

$name incorrect syntax examples:
  $name -d
  $name -u -l file

EOT
exit 0
fi

# choosing options from arguments
r=n
sedp=n
while [ "x$1" != "x" ]
do
	case "$1" in
		-r) r=y;;
		-l) test_sedp "$sedp"; sedp='s/[A-Z]/\L&/g';;
		-u) test_sedp "$sedp"; sedp='s/[a-z]/\U&/g';;
		-*) print_error "wrong option $1"; exit 1;;
		#\'\*\') test_sedp "$sedp"; sedp=$1;; #TODO: correct sed pattern ?
		#*) break;;
		*) if [ $sedp = "n" ]
		   then
			 sedp="$1"
		   else
			break
		   fi;;
	esac
	shift
done

# testing empty sed pattern
if [ $sedp = "n" ]
then
	print_error "no option chosen: choose one from -l, -u, <sed pattern>"
	exit 1
fi

# Changing filenames - no recursion
while [ "x$1" != "x" ]
do
	if [ $r = "y" ] && [ -d $1 ]
	then
		mv "$1" "`echo $1 | sed $sedp`"
		recursive "`echo $1 | sed $sedp`" "$sedp"
	else
		mv "$1" "`echo $1 | sed $sedp`"
	fi
	shift
done

# questions:
# how should modify_examples work
# should modify change file extensions (probably not)
# can filenames come before options
